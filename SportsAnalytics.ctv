<!-- Hey Emacs, make this -*- mode: XML -*- -->
<CRANTaskView>

  <name>Sports Analytics</name>
  <topic>Sports Analytics</topic>
  <maintainer email="ben.baumer@gmail.com">Ben Baumer</maintainer>
  <version>2021-09-17</version>
  
  <info>
    <p>
      This CRAN Task View contains a list of packages useful for
      sports analytics, grouped by sport. 
    </p>

    <p> 
      Contributions are always welcome, and encouraged. 
      The source file for this particular task view file
      resides in a GitHub repository (see below) so that pull
      requests are possible. 
    </p>
   
    <p>
    <strong>Baseball</strong>
    </p>
    <ul>
      <li>
        Historial baseball data is available through the <pkg>Lahman</pkg>
        package, which contains season-level data for Major League Baseball
        going back to 1871. 
      </li>
      <li>
        <pkg>retrosheet</pkg> facilitates downloading game log, team IDs, rosters, and play-by-play and other files from <a href="http://wwws.retrosheet.org/">Retrosheet.org</a>, and returning the results as data frames. Local caching can be employed to improve efficiency. Note that the play-by-play data returned comes directly from the event files and is not parsed (i.e., <a href="https://github.com/chadwickbureau/chadwick">Chadwick</a> is not bundled). 
      </li>
      <li>
        <pkg>pitchRx</pkg> provides access to pitch-level data
        through the Major League Baseball Advanced Media API. 
      </li>
      <li>
        <pkg>mlbstats</pkg> provides functions for vector-based computation of many baseball statistics, both traditional and sabermetric. This should not be confused with <pkg>mlbstatsR</pkg> which provides an interface to websites such as MLB.com, ESPN.com, and Baseball-Reference.com. <pkg>mlbstatsR</pkg> can download IDs and stats for players and team, as well as MLB logos. 
      </li>
      <li>
        <pkg>baseballDBR</pkg> leverages the backend database functionality of <pkg>dplyr</pkg> to build local databases that mirror the data contained in <pkg>Lahman</pkg>. Like <pkg>mlbstats</pkg>, it also includes functions to compute baseball statistics, but on data frames rather than vectors. 
      </li>
    </ul>

    <p>
    <strong>Basketball</strong>
    </p>
    <ul>
      <li>
        <pkg>BAwiR</pkg> is a collection of tools to analyze basketball data, with focus on data scraping and visualization.
      </li>
      <li>
        <pkg>AdvancedBasketballStats</pkg> provides functions to calculate and analyze basketball statistics for players, teams, lineups (quintets), and plays.
      </li>
      <li>
        <pkg>uncmbb</pkg> contains data on University of North Carolina (at Chapel Hill) Men's Basketball Results since the 1949-50 season.
      </li>
      <li>
        <pkg>BasketballAnalyzeR</pkg> accompanies the book <a href="https://www.routledge.com/Basketball-Data-Science-With-Applications-in-R/Zuccolotto-Manisera/p/book/9781138600799">Basketball Data Science With Applications in R</a>. This package includes data and functions to analyze and visualize basketball data.
      </li>
      <li>
        <pkg>NBAloveR</pkg> is an R interface to access basketball data from <a href="https://www.basketball-reference.com">Basketbal Reference</a> API. This package also contains functions to help users with analyzing basketball data. 
      </li>
      <li>
        <pkg>SpatialBall</pkg> helps with spatial analysis of NBA data, in particular, generating offensive and defensive shot charts for teams, players, and seasons.
      </li>
    </ul>

    <p>
    <strong>Football</strong>
    </p>
    <ul>
    <li>
      <pkg>nflfastR</pkg> contains functions to efficiently scrape NFL play-by-play data from 1999 to present.  Similar to <pkg>nflscrapR</pkg>, but much faster.  
    </li>
    <li>
      <pkg>fflr</pkg> contains functions for accessing ESPN raw fantasy football data from the ESPN fantasy football API and formatting the raw data.   
    </li>
    <li>
      <pkg>ffsimulator</pkg> allows users to simulate fantasy football seasons using bootstrap simulations.  Simualtions are based on historical rankings and data from the package <pkg>nflfastR</pkg>.  In addition, functions for computing optimal lineups and aggregating results are provided.  
    </li>
    <li>
      <pkg>ffscrapr</pkg> API Client for Fantasy Football League Platforms
    </li>
    <li>
      <pkg>nfl4th</pkg> Functions to Calculate Optimal Fourth Down Decisions in the National Football League.  Data on 4th downs is collected from <a href = "https://www.nfl.com/">NFL</a> and <a href = "https://www.espn.com/">ESPN</a>.
    </li>
    <li>
       <pkg>nflseedR</pkg> The package contains functions for ranking NFL teams based on the complex NFL tie breaking rules.  Includes division ranking, playoff seeding, and draft order.
    </li>
    <li>
       <pkg>gsisdecoder</pkg> High Efficient Functions to Decode NFL Player IDs.  For use in nflfastR pacakge.
    </li>
    </ul>

    <p>
    <strong>Hockey</strong>
    </p>
    <ul>
      <li>
      <pkg>hockeyR</pkg> The package contains functions to load raw NHL play-by-play data from <a href = "https://nhl.com">NHL.com</a>.  Additionally, the package contains functions for scraping <a href = "https://www.hockey-reference.com">www/hockey-reference.com</a> including standings, player stats, and jersey number history.
          </li> 
      
      <li>
      <pkg>NHLData</pkg>  The package contains scores from NHL games dating back to 1917.  Data are stored one season at a time and contains scores for every game during a particular season.  
      </li> 
      
    </ul>

    <p>
    <strong>Soccer</strong>
    </p>
    <ul>
      <li>
        European soccer data is available through the <pkg>engsoccerdata</pkg> package, which contains match results for English and other European soccer leagues dating back to 1871. 
      </li>
      <li>
        <pkg>socceR</pkg> provides functions for evaluating soccer predictions and simulating results from soccer matches and tournament.
      </li>
      <li>
        <pkg>fbRanks</pkg> helps with estimating team strengths and rankings using time dependent Poisson regression and data on number of goals scored.
      </li>
      <li>
        <pkg>ggsoccer</pkg> provides functions for visualizing soccer event data in <pkg>ggplot2</pkg>.
      </li>
      <li>
        <pkg>qqr</pkg> is a collection of Brazilian Soccer Championship data on match statistics since 2014.
      </li>
      <li>
        <pkg>footballpenaltiesBL</pkg> contains data and plotting functions for analyzing penalty kicks in the German Men's Bundesliga from 1963-64 to 2016-17.
      </li>
    </ul>

    <p>
    <strong>Chess</strong>
    </p>
    <ul>
      <li>
        <pkg>chess</pkg> is an opinionated wrapper for R around <a href="https://github.com/niklasf/python-chess">python-chess</a>. It reads and writes <a href="https://en.wikipedia.org/wiki/Portable_Game_Notation">PGN files</a> and SVGs of game boards. 
      </li> 
      <li>
        <pkg>stockfish</pkg> is an R package that implements the UCI open communication protocol and ships with <a href="https://github.com/official-stockfish/Stockfish">Stockfish</a>, a popular, open source, powerful chess engine written in C++.
      </li>
      <li>
        Like <pkg>chess</pkg>, <pkg>bigchess</pkg> reads and writes PGN files. And like <pkg>stockfish</pkg>, <pkg>bigchess</pkg> provides an API to the UCI chess engines. <pkg>bigchess</pkg> is also able to read multiple game files at once without copying to RAM. 
      </li>
    </ul>

    <p>
    <strong>Swimming</strong>
    </p>
    <ul>
      <li>
        <pkg>SwimmeR</pkg> reads swimming results in a variety of formats and returns results in tidy data frame. It also includes functions for coverting times between short-course yards (SCY), short-course meters (SCM), and long-course meters (LCM).
      </li> 
    </ul>
    
    <p>
    <strong>Australian Rules Football</strong>
    </p>
    <ul>
      <li>
        <pkg>fitzRoy</pkg> is a package for scraping and processing Australian Football League (AFL) data. <pkg>fitzRoy</pkg> provides access to publicly data sources such as<a href="https://afltables.com/afl/afl_index.html">AFL Tables</a>,<a href="https://www.footywire.com">Footy Wire</a>, and<a href="https://squiggle.com.au">The Squiggle</a>.
      </li> 
    </ul>

    <p>
    <strong>Cricket</strong>
    </p>
    <ul>
      <li>
        <pkg>yorkr</pkg> provides functions for analyzing statistics of cricket players and teams based on <a href = "https://cricsheet.org">Cricsheet</a> data.
      </li> 
      <li>
        <pkg>cricketr</pkg> is a collection of tools for analyzing cricket performances of players and teams based on <a href = "https://stats.espncricinfo.com/ci/engine/stats">ESPN Cricinfo Statsguru</a> data.
      </li> 
    </ul>

    <p>
    <strong>Volleyball</strong>
    </p>
    <ul>
      <li>
        <pkg>volleystat</pkg> contains match statistics from the German Volleyball Bundesliga from 2013-14 to 2018-19. Data were extracted from the league <a href="www.volleyball-bundesliga.de">homepage</a>.
      </li> 
    </ul>
    
    <p>
    <strong>GPS Tracking</strong>
    </p>
    <ul>
      <li>
        <pkg>trackeR</pkg> and <pkg>trackeRapp</pkg> provide tools for analyzing running, cycling and swimming data from GPS-enabled tracking devices within R. These two packages allow users to tidy and explore data from workouts and competitions.
      </li> 
    </ul>

    <p>
    <strong>General</strong>
    </p>
    <ul>
      <li>
        <pkg>teamcolors</pkg> provides color palettes, <pkg>ggplot2</pkg>
        themes, <pkg>xaringan</pkg> themes, and logos for professional teams
        across a variety of sports and leagues. 
      </li> 
      
      
      
      <li>
        <pkg>colorr</pkg> This package contains color palettes for professional sports teams in the EPL, MLB, NBA, NHL, and NFL.  
      </li> 
      
      <li>
        <pkg>nbacolorpalettes</pkg> This pacakge create color palettes based on NBA team jerseys.  This was inspired by the Wes Anderson package in R.  
      </li> 
      
      <li>
        <pkg>aRbs</pkg> This package contains functions 
      </li> 
      
      
mvglmmRank
SportsAnalytics
TouRnament
piratings
    </ul>

  </info>

  <packagelist>
    <pkg>Lahman</pkg>
    <pkg>retrosheet</pkg>
    <pkg>pitchRx</pkg>
    <pkg>mlbstats</pkg>
    <pkg>mlbstatsR</pkg>
    <pkg>baseballDBR</pkg>
    <pkg>teamcolors</pkg>
    <pkg>engsoccerdata</pkg>
    <pkg>socceR</pkg>
    <pkg>fbRanks</pkg>
    <pkg>ggsoccer</pkg>
    <pkg>qqr</pkg>
    <pkg>footballpenaltiesBL</pkg>
    <pkg>SwimmeR</pkg>
    <pkg>chess</pkg>
    <pkg>stockfish</pkg>
    <pkg>bigchess</pkg>
    <pkg>BAwiR</pkg>
    <pkg>AdvancedBasketballStats</pkg>
    <pkg>uncmbb</pkg>
    <pkg>BasketballAnalyzeR</pkg>
    <pkg>NBAloveR</pkg>
    <pkg>SpatialBall</pkg>
    <pkg>fitzRoy</pkg>
    <pkg>yorkr</pkg>
    <pkg>cricketr</pkg>
    <pkg>volleystat</pkg>
    <pkg>trackeR</pkg>
    <pkg>trackeRapp</pkg>
    <pkg>nflfastR</pkg>
    <pkg>fflr</pkg>
    <pkg>ffsimulator</pkg>
    <pkg>ffscrapr</pkg>
    <pkg>nfl4th</pkg>
    <pkg>nflseedR</pkg>
    <pkg>gsisdecoder</pkg>
    <pkg>hockeyR</pkg>
    <pkg>NHLData</pkg>
    
  </packagelist>

  <links>
    <view>SportsAnalytics</view>

    <a href="https://github.com/beanumber/ctv-sportsanalytics">GitHub repository for this Task View</a>
  </links>

</CRANTaskView>
